% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/JOINTLYsolve.R
\name{JOINTLYsolve}
\alias{JOINTLYsolve}
\title{JOINTsolve}
\usage{
JOINTLYsolve(
  kernel.list,
  snn.list,
  rare.list,
  cpca.result,
  init = "clustering",
  k = 15,
  m = 5,
  iter.max = 100,
  alpha = 10,
  mu = 10,
  lambda = 5,
  beta = 10,
  progressbar = TRUE,
  ncpu = 1,
  bpparam = SerialParam()
)
}
\arguments{
\item{kernel.list}{A list (per-batch) of kernels. See \link{alphaDecay}}

\item{snn.list}{A list (per-batch) of SNN graphs. See \link{computeSNN}}

\item{rare.list}{A list (per-batch) of rare cell indices. See \link{computeSNN}}

\item{cpca.result}{The results from CPCA analysis. See \link{cpca}}

\item{init}{The name of the method to use for initialization ("random" or "clustering"). [default = "clustering"]}

\item{k}{The number of factors to calculate [default = 15]}

\item{m}{The fuzzy parameter of for cluster initialization [default = 5]}

\item{iter.max}{The maximum number of iterations to perform [default = 100]}

\item{alpha}{Alpha parameter of the loss function [default = 10]}

\item{mu}{Mu parameter of the loss function [default = 10]}

\item{lambda}{Lambda parameter of the loss function [default = 5]}

\item{beta}{Beta parameter of the loss function [default = 10]}

\item{progressbar}{A logical indicating whether or not to print a progress bar [default = TRUE]}

\item{ncpu}{The number of cpus to use for matrix multiplication [default = 1]}

\item{bpparam}{The name of the type of BPPARAM object to use for sequential or parallel processing [defult = SerialParam()]}
}
\value{
A list containing normalized H matrices to use for clustering, as well a list (per-batch) of H matrices, a list (per-batch) of F matrices and a list (per-batch) of W matrices.
}
\description{
Function to solve the NMF problem in JOINTLY
}
